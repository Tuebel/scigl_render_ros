<!--
Launches the ar_render_node. The node receives the images froma cv_camera
node. The camera is assumed to be static in the world frames origin.
The objects pose is received.
-->
<launch>
  <!--Pose of the camera in the world-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="camera_tf" args="0 0 0 0 0 0 world camera_link"/>
  <!--Pose of the object is a aruco marker pose-->
  <node name="aruco_detect_node" pkg="charuco_detect" type="aruco_detect_node">
    <param name="camera_base_topic" value="/camera/color/image_raw"/>
    <param name="camera_frame_id" value="camera_color_optical_frame"/>
  </node>
  <!--ar_render_node renders the object pose-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="object_tf" args="0 0 0 0 0 0 aruco_marker_23 object"/>
  <!--Position of the light in the world -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="light_tf" args="0 -2 0 0 0 0 world light"/>
  <!--Camera should be sending on /camera/color/image_raw-->
  <!--Augmented reality rendering-->
  <node name="ar_render_node" pkg="scigl_render_ros" type="ar_render_node">
    <param name="model_path" value="$(find scigl_render)/model/coordinates.3ds" type="str"/>
  </node>
</launch>